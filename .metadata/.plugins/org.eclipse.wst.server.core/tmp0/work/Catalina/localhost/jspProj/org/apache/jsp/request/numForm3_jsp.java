/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-07-31 11:21:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.request;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import oops_p.Exam;

public final class numForm3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/green_project/new_jspwork/java_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/jspProj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1690509038365L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("oops_p.Exam");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	int cnt = 5;  //초기값
	if(request.getParameter("cnt") != null){  //cnt 값이 null이 아니라면
		cnt = Integer.parseInt(request.getParameter("cnt"));
	}
	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>numForm3</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function cntChange(){   ");
      out.write("\r\n");
      out.write("		var changedcnt = document.getElementById(\"cnt\");  /* 그래서 현재 cnt값을 재선언하기 위해 select 태그의 id=\"cnt\"를 가져옴 */\r\n");
      out.write("		var newcnt = changedcnt.value;  /* 가져온 cnt를 newcnt로 재선언 */\r\n");
      out.write("		if(changedcnt.value == \"직접입력\"){\r\n");
      out.write("			var writedcnt = parseInt(prompt(\"사람수를 입력해주세요.\"));\r\n");
      out.write("			\r\n");
      out.write("			if(isNaN(writedcnt) || writedcnt == null){\r\n");
      out.write("				alert(\"잘못된 입력입니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			newcnt = writedcnt;\r\n");
      out.write("			changedcnt.value = writedcnt;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		qwer.action=\"?\";  /* jsp주소로 넘겨주지않고 cnt값만 변경하고 새로고침하기위해 action값 초기화 후 submit()  */\r\n");
      out.write("		qwer.submit();\r\n");
      out.write("		alert(\"인원수를 \"+ newcnt +\"로 변경합니다.\"); /* 변경완료 알림창 생성 */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>numForm3</h1>\r\n");
      out.write("<h3>과목의 값을 전송하여 총점,평균,등급,등수를 계산하고 정렬해보자!!</h3>\r\n");
      out.write("<form action=\"numReg3.jsp\" name=\"qwer\">  <!-- action통해서 numReg3.jsp 로 내용을 보냄 -->\r\n");
      out.write("	<table border=\"\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"2\" align=\"right\">\r\n");
      out.write("			인원수:\r\n");
      out.write("				<select name=\"cnt\" id=\"cnt\" onchange=\"cntChange()\">  <!-- onchange():: 변화가 일어났을때 감지함 => cntChange()함수 작동 -->\r\n");
      out.write("				");
 for(int i=5; i<=30; i+=5){   // i는 5부터 30까지 5씩 증가함
				   String sel ="";  // sel 이라는 문자 선언
				   
				   if(i == cnt){
					   sel = "selected";  // i와 select의 cnt 값이 같다면 옵션태그 속성에 selected가 추가되게함
				   }
				
      out.write("  <!-- ?왜 빨간줄 뜨는거지? -->\r\n");
      out.write("					<option ");
      out.print(sel);
      out.write('>');
      out.print(i );
      out.write("</option>  <!-- for문을 돌려 option칸을 생성 -->\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("				");
 } 
      out.write("\r\n");
      out.write("					<option>직접입력</option>\r\n");
      out.write("				</select>\r\n");
      out.write("			</td>\r\n");
      out.write("			\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>이름</td>\r\n");
      out.write("			<td>국어</td>\r\n");
      out.write("			<td>수학</td>\r\n");
      out.write("			<td>영어</td>\r\n");
      out.write("			<td>사회</td>\r\n");
      out.write("			<td>과학</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		 ");
 for(int i=0;i<cnt;i++){ 
      out.write("  <!-- for문을 돌려 cnt수 만큼 사람,과목,점수를 생성 -->\r\n");
      out.write("		 <tr>  <!-- form action으로 name의 값이 넘어가고 화면에 출력되는건 value값 -->\r\n");
      out.write("			<td><input type=\"text\" name=\"per\" value=\"사람");
      out.print(i+1 );
      out.write("\"/></td>  <!-- 임의의 사람에 넘버링만 붙임 -->\r\n");
      out.write("			<td><input type=\"text\" name=\"kor\" value=\"");
      out.print((int)(Math.random()*50)+50 );
      out.write("\" /></td>  <!-- 전체평균점수가 너무 낮게 나와서 국어 평균 좀 상향 -->\r\n");
      out.write("			<td><input type=\"text\" name=\"eng\" value=\"");
      out.print((int)(Math.random()*80)+20 );
      out.write("\" /></td>  <!-- 나머지는 최소값 20점 -->\r\n");
      out.write("			<td><input type=\"text\" name=\"math\" value=\"");
      out.print((int)(Math.random()*80)+20 );
      out.write("\" /></td>\r\n");
      out.write("			<td><input type=\"text\" name=\"soc\" value=\"");
      out.print((int)(Math.random()*80)+20 );
      out.write("\" /></td>\r\n");
      out.write("			<td><input type=\"text\" name=\"sci\" value=\"");
      out.print((int)(Math.random()*80)+20 );
      out.write("\" /></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");
 } 
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"6\" align=\"right\">  <!-- 행6개를 1개로 합쳐서 표기 -->\r\n");
      out.write("				<input type=\"submit\" value=\"계산\" />\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
